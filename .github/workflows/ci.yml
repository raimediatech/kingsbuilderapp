name: KingsBuilder CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: "npm"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Generate test coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/
        fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == "push" && (github.ref == "refs/heads/main" || github.ref == "refs/heads/develop")
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "20.x"
        cache: "npm"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: build/

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == "push" && github.ref == "refs/heads/develop"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: build/
    
    - name: Setup Shopify CLI
      run: npm install -g @shopify/cli @shopify/app
    
    - name: Deploy to staging
      run: shopify app deploy --environment=staging
      env:
        SHOPIFY_CLI_STORE: ${{ secrets.SHOPIFY_STAGING_STORE }}
        SHOPIFY_CLI_PASSWORD: ${{ secrets.SHOPIFY_CLI_PASSWORD }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == "push" && github.ref == "refs/heads/main"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: build/
    
    - name: Setup Shopify CLI
      run: npm install -g @shopify/cli @shopify/app
    
    - name: Deploy to production
      run: shopify app deploy
      env:
        SHOPIFY_CLI_STORE: ${{ secrets.SHOPIFY_PRODUCTION_STORE }}
        SHOPIFY_CLI_PASSWORD: ${{ secrets.SHOPIFY_CLI_PASSWORD }}
